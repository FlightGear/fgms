#
# Example configuration file of fgms.
#
# fgms starts with sensible default values which brings up
# fgms in a LAN environment. You should not need to change
# any of them.
#
# Things change if you are providing fgms as a service to
# the public, you possibly want to adjust some of them. This
# file gives you an overview of possible settings
#

#
# The configuration is parsed by the cli module of fgms.
# The '#' character starts a remark. Everything starting with
# '#' to the end of the line is ignored. You can use spaces or
# TAB characters for indention, just as you like.
# Boolean values can be entered as:
# - true/false
# - enable/disable
# - on/off
#

#
# the 'fgms' paragraph configures basic fgms settings
#
fgms
  # name of the server, used in chat messages sent by
  # fgms
  hostname change_this
  # Fully qualified domain name (FQDN), eg. mpsereverXX.flightgear.org
  # This information must be correct if this fgms is tracked. The FQDN
  # is registered in fgtracker.
  fqdn mpsereverXX.flightgear.org
  # Listening port for data connections (fgls clients). Default
  # for Flightgear is 5000
  data_port 5000
  # Port for telnet connections. Over this port fgms provides information
  # about currently connected users.
  # Set to 0 (zero) to disable telnet. Note however, for public servers
  # this should be 5000
  query_port 5001
  # Time to keep client information in the internal list without updates.
  # Clients which send no updates within this period are considered
  # 'disconnected' and are removed. Time is in seconds.
  player_expires 10
  # write logs to this file
  logfile fgms.log
  # enable/disable daemon (background) mode. Only available on unixoid
  # environments.
  daemon disable
  # Only forward data to clients which are near by the sender. 'Near' is
  # defined by 'out_of_reach' in nautical miles.
  out_of_reach 100
  # Clients can adjust 'out_of_reach' by supplying a radar range.
  # 'max_radar_range' defines the maximum value accepted by fgms
  # in nautical miles.
  max_radar_range 2000
  # Enable/disable HUB mode.
  # If enabled, this fgms will resend packets received from relays
  # (see below) to other known relays. Only enable if you know what
  # you are doing.
  hub_mode false
end

# For the file interface. This will be changed in the near future.
# Currently settings via cli is not possible!
# server.exitfile  = fgms_exit
# server.resetfile = fgms_reset
# server.statsfile = fgms_stats

# Enable administrative access to fgms via telnet.
# Via this interface you can modify the configuration on the fly
# any query various information and statistical data from the server.
cli
  # enable the admin cli
  enable true
  # let the cli listen to this port, defaults to query_port+2
  port 5002
  # Define users with access to the cli.
  # Syntax: user NAME PASSWORD PRIVLEVEL
  # Only 2 PRIVLEVELS are currently defined:
  # 1 - limited read onyl access
  # 2 - full read/write access
  user fred fred 2
end

# Enable/disable tracking service.
# Only enable this if you are using you own tracking server
# or the admin of the (public) tracking server allows this!
tracker
  enable false
  # logfile for the tracker module
  logfile tracker.log
  # tracking server to use
  server localhost
  # port the tracking server is listening
  port 8000
  # frequence for sending updates to the tracker in seconds
  frequence 10
end

#
# List of statically configured relay servers.
# Here you configure to which servers you want your server
# to send data of local clients to. Remember that those
# servers need to be configured so that they will accept packets
# from your server and sent their client data to your server, too!
#
# syntax: add IP PORT NAME
#
relay
  add 192.0.2.100 5000 localhost
  add 192.0.2.100 5005 localhost2
end

#
# List of crossfeed servers.
# Crossfeeds are special. The will receive all locally received
# packets without any condition, all packets are mirrored to them.
# Normally you don't want to use them, but they are helpfull in
# development or for providing the data in other services (e.g.
# a map service).
#
# syntax: add IP PORT NAME
#
crossfeed
  add 127.0.0.1 "allow localhost"
end

#
# List of statically configured blacklisted IPs. fgms maintains the
# blacklist automatically. It will put in any unknown relays or clients
# which send broken data. However you can provide IPs which you want
# to block permamently.
#
# syntax: add IP REASON
#         add IP TTL REASON
# TTL: time in seconds to keep this entry in the list without updates.
#      If 0 the entry never expires. If ommited defaults to 0
#
#
blacklist
  add 127.0.0.1 "allow localhost"
end

#
# List of staically whitelisted IPs. Here you can define which IPs you
# never want to block. The whitelist has presedence over the blacklist.
# Normally you don't need this. But if you are running two servers, one
# beeing cross feeded, you need to whitelist the sender so it is not
# put on the blacklist.
#
# syntax: add IP REASON
#         add IP TTL REASON
# TTL: time in seconds to keep this entry in the list without updates.
#      If 0 the entry never expires. If ommited defaults to 0
#
whitelist
  add 127.0.0.1 "allow localhost"
end

# eof

